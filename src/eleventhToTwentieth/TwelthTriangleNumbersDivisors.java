package eleventhToTwentieth;

import main.Util;

/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

 * @author Andreas Scheuss
 *
 */
public class TwelthTriangleNumbersDivisors {

	public static void main(String[] args) {
		int divisors=0;
		int n= 1;
		while (divisors<500) {
			if (0==n%2) {
				divisors = Util.countDivisors(n/2) * Util.countDivisors(n + 1);
			}
			else {
				divisors = Util.countDivisors(n) * Util.countDivisors((n + 1)/2);
			}
			n++;
		}
		System.out.print((n*(n-1))/2);
	}

}
